class Solution {
    public boolean isValid(String s) {
        //如果s为null或者s的长度为奇数是直接返回false
        if (s == null || s.length() % 2 == 1) {
            return false;
        }
        //变量len获取s的长度
        int len = s.length();
        //创建一个存储Character类型的栈
        Stack<Character> stack = new Stack<>();
        //遍历s
        for (int i = 0;i < len;i ++) {
            //获取s每一个索引所在的字符
            char c = s.charAt(i);
            //判断字符是否是左括号（(、{、[），如果是的话压进栈
            if (c == '(' || c == '{' || c == '[') {
                stack.push(c);
            }
            //判断是否为右括号（)），并且还要判断栈是否为空，以及栈弹出的是否是左括号（(）
            if (c == ')') {
                if (stack.isEmpty()) {
                    return false;
                }
                if (stack.pop() != '(') {
                    return false;
                }
            }
            //判断是否为右括号（}），并且还要判断栈是否为空，以及栈弹出的是否是左括号（{）
            if (c == '}') {
                if (stack.isEmpty()) {
                    return false;
                }
                if ((char)stack.pop() != '{') {
                    return false;
                }
            }
            //判断是否为右括号（]），并且还要判断栈是否为空，以及栈弹出的是否是左括号（[）
            if(c == ']') {
                if (stack.isEmpty()) {
                    return false;
                }
                if (stack.pop() != '[') {
                    return false;
                }
            }
        }
        判断栈是否为空，也就是判断是否是有效的括号
        return stack.isEmpty();
    }
}
